-- Отбираем все диспансерные приемы. 
-- Делается для установления всех хронических заболеваний у застрахованных с целью
-- исключения их из статистики по общей (оставляем только первое обращение) и первичной
-- (исключаем полностью).

-- на 27.09.2022 признано нецелесообразны. Лучший результат дал отбор по c_zab=2 из Первичных приемов

IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID('Заболеваемость.[Диспансерные приемы]')) 
	DROP TABLE Заболеваемость.[Диспансерные приемы]
-- select top 1 * into Заболеваемость.[Диспансерные приемы] from facts.Services
-- truncate table  Заболеваемость.[Диспансерные приемы]
CREATE TABLE Заболеваемость.[Диспансерные приемы] (recid int, 
	sn_pol varchar(25), c_i varchar(30), ages dec(3), sex tinyint, d_u date, ds char(6), cod dec(6),
	prvs dec(4), ord dec(1), date_ord date, lpu_ord dec(6), 
	p_cel char(3), dn dec(1), c_zab dec(1), 
	CONSTRAINT [pk_recid] PRIMARY KEY NONCLUSTERED (recid))
GO
create index idx_pervpr on Заболеваемость.[Диспансерные приемы] (cod) include (recid)
create index idx_pervpr_recid on Заболеваемость.[Диспансерные приемы] (recid)

ALTER TABLE Заболеваемость.[Диспансерные приемы]
	ADD CONSTRAINT dsppr_c_zab_FK FOREIGN KEY (c_zab) REFERENCES dim.c_zab(code)
ALTER TABLE Заболеваемость.[Диспансерные приемы]
	ADD CONSTRAINT dsppr_d_u_FK FOREIGN KEY (d_u) REFERENCES dim.Dates(d_u)
ALTER TABLE Заболеваемость.[Диспансерные приемы]
	ADD CONSTRAINT dsppr_ds_FK FOREIGN KEY (ds) REFERENCES dim.Ds(code)
--select * from [Заболеваемость].[Диспансерные приемы] a
--	left outer join dim.Ds b on a.ds=b.code
--where b.code is null 
-- 44 диагноза отсутствуют в dim.Ds!
ALTER TABLE Заболеваемость.[Диспансерные приемы]
	ADD CONSTRAINT dsppr_prvs_FK FOREIGN KEY (prvs) REFERENCES dim.Prvs(code)
select * from [Заболеваемость].[Диспансерные приемы] a
	left outer join dim.Prvs b on a.prvs=b.code
where b.code is null 
-- 54 строк с нулевым prvs
ALTER TABLE Заболеваемость.[Диспансерные приемы]
	ADD CONSTRAINT dsppr_ord_FK FOREIGN KEY (ord) REFERENCES dim.Ord(code)
ALTER TABLE Заболеваемость.[Диспансерные приемы]
	ADD CONSTRAINT dsppr_p_cel_FK FOREIGN KEY (p_cel) REFERENCES dim.P_cel(code)
ALTER TABLE Заболеваемость.[Диспансерные приемы]
	ADD CONSTRAINT dsppr_dn_FK FOREIGN KEY (dn) REFERENCES dim.Dn(code)
GO

insert into Заболеваемость.[Диспансерные приемы]
	(
		recid, sn_pol, c_i, ages, sex, cod, d_u, ds, 
		prvs, ord, date_ord, lpu_ord, p_cel, dn, c_zab
	)
select 
	recid, sn_pol, c_i, ages, sex, cod, d_u, ds, 
	prvs, ord, date_ord, lpu_ord, p_cel, dn, c_zab
from facts.Services   
where cod in (1015, 1016, 1025, 1035, 1045, 1055, 1065, 1075, 1085, 1095, 1145, 1155,
				1165, 1195, 1265, 1275, 1280, 1305, 1306, 1335, 1375, 1415, 1435, 1445,
				1465, 1515, 1805, 1806, 1811, 9406, 
				101003, 101004, 101015, 101016, 101031, 101035, 101045, 101055, 101056,
				101065, 101072, 101085, 101095, 101105, 101115, 101125, 101135, 101165,
				101205, 101215, 109405)
-- (441903 row(s) affected)

-- устанавливаем правильный профиль по справочнику spv015!
update Заболеваемость.[Диспансерные приемы] 
	set prvs = 
	(case 
		when cod in (1041,1042,1043,1044,1045,1702,1742,1780,101101,101102,101103,101105,101107,101741,101908)
			then 118
		when cod in (1071,1072,1073,1075,1705,1745,101121,101122,101125,101127,101130,101705,101909)
			then 31
		when cod in (1051,1052,1053,1055,1703,1743,101211,101212,101213,101215,101217,101731,101902)
			then 114
		when cod in (1061,1062,1065,1704,1744,101201,101202,101203,101205,101207,101703,101904)
			then 89
		when cod in (1091,1092,1093,1095,1097,1747,101131,101132,101133,101135,101137,101735)
			then 32
		when cod in (1081,1082,1083,1085,1706,1746,101743,101910)
			then 16
		when cod in (1141,1142,1143,1145,1147,1707,1750,1753,1755,1756,1780,101032,101033,101034,101035,101037,101707,101745,101911)
			then 30
		when cod in (1161,1162,1163,1165,1167,1709,1752,101081,101082,101083,101085,101087,101711,101905)
			then 145
		when cod in (1101,1102,1748,101171,101172,101771,101924)
			then 63
		when cod in (1111,1112,1113,1114,1115,1117,1730,1749,101181,101182,101183,101184,101185,101187,101773,101926)
			then 59
		when cod in (1151,1152,1153,1154,1155,1157,1708,1751,101041,101042,101045,101047,101709,101912)
			then 28
		when cod in (1191,1192,1193,1195,1722,1757,101751)
			then 17
		when cod in (1261,1262,1263,1265,1267,1710,1764,101061,101062,101065,101067,101713,101913)
			then 20
		when cod in (1271,1272,1273,1275,1276,1277,1278,1279,1280,1765,101051,101052,101053,101054,101055,101056,101057,101058,101059,101060,101914)
			then 19
		when cod in (1301,1302,1303,1305,1306,1307,1712,1767,101161,101162,101163,101165,101167,101168,101169,101170,101717,101917) -- Неврология
			then 14
		when cod in (1331,1332,1333,1335,1337,1726,1769,101111,101112,101113,101115,1011171,101721,101916) -- Дерматовенерологи
			then 10
		when cod in (1371,1372,1373,1375,1377,1713,1772) -- Ревматология
			then 91
		when cod in (1411,1412,1415,1714,1773,101091,101092,101093,101095,101097,101727,101907) -- Аллергология
			then 255
		when cod in (1431,1432,1433,1435,1716,1775,101729,101906) -- Пульмонология
			then 262
		when cod in (1441,1442,1443,1445,1447,1727,1763,101070,101071,101072,101073,101719,101915) -- Гинекология
			then 8
		when cod in (1461,1462,1465,1717,1776,101763) -- Колопроктология
			then 43
		when cod in (1001,1002,1011,1012,1013,1014,1015,1016,1017,1018,1021,1022,1025,1027,1031,1032,1035,1811,
			1511,1512,1513,1515,1801,1802,1803,1804,1805,1806,1807,1808,1823,1825,
			101001,101002,101003,101004,101005,101006,101011,101012,101013,
			101014,101015,101016,101017,101018,101027,101028,101029,101030,101031) -- Терапия
			then 27
		when cod in (9401,9402,9403,9404,9405,9406,9407,
			109401,109402,109403,109404,109405,109406,109407,109408,109409)
			then 171
		else 0
	end)
--select cod, count(*) from Заболеваемость.[Диспансерные приемы] where prvs=0 group by cod
-- после этого не должно остаться нулевых профилей - проверить!
go 
-- устанавливаем правильный профиль

-- удаляем все неспецифичные для профиля диагонозы, используя заранее подготовленный
-- справочник Статистика.[Все специальности], в котором содержатся соответствия допустимых
-- профилей-диагноз
begin tran 
delete a from Заболеваемость.[Диспансерные приемы] a 
	left join Статистика.[Все специальности] b 
	on a.prvs=b.prvs and a.ds=b.ds 
	where b.cnt is null
-- (45219 row(s) affected)
commit 
rollback
go 

-- так можно посмотреть все диспансерные диагнозы
with cte  (ds,cnt) as
(select ds, count(*) as cnt from [Заболеваемость].[Диспансерные приемы]
	where dn in (1,2) group by ds)
select cte.ds as ds, ds.name as name, cte.cnt as cnt from cte
	left join dim.Ds ds on cte.ds=ds.code
	order by cnt desc
